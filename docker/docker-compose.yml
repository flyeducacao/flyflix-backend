services:
  mysql:
    image: mysql:8.0
    container_name: mysql-prod-server
    env_file:
      - .env
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 5
      start_period: 10s
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=America/Sao_Paulo
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql-init:/docker-entrypoint-initdb.d
    restart: on-failure
    networks:
      - backend_network

  minio:
    image: minio/minio
    container_name: minio_flyflix
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: on-failure
    networks:
      - backend_network

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: fly_flix_image
    container_name: fly_flix_app
    depends_on:
      mysql:
          condition: service_healthy
      minio:
          condition: service_started
    ports:
      - "8080:8080"
    env_file:
      - .env
    restart: on-failure
    networks:
      - backend_network

volumes:
  mysql_data:
  minio_data:

networks:
  backend_network:
    driver: bridge
